// Generated by view binder compiler. Do not edit!
package com.example.how2x.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.how2x.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MyaccountFragmentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout ConstraintLayout;

  @NonNull
  public final LinearLayout LinearNameApply;

  @NonNull
  public final LinearLayout LinearSaldo;

  @NonNull
  public final Button apply;

  @NonNull
  public final Button deposit;

  @NonNull
  public final EditText name;

  @NonNull
  public final Button reset;

  @NonNull
  public final TextView saldo;

  @NonNull
  public final TextView showName;

  @NonNull
  public final TextView value;

  @NonNull
  public final Button withdraw;

  private MyaccountFragmentBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout ConstraintLayout, @NonNull LinearLayout LinearNameApply,
      @NonNull LinearLayout LinearSaldo, @NonNull Button apply, @NonNull Button deposit,
      @NonNull EditText name, @NonNull Button reset, @NonNull TextView saldo,
      @NonNull TextView showName, @NonNull TextView value, @NonNull Button withdraw) {
    this.rootView = rootView;
    this.ConstraintLayout = ConstraintLayout;
    this.LinearNameApply = LinearNameApply;
    this.LinearSaldo = LinearSaldo;
    this.apply = apply;
    this.deposit = deposit;
    this.name = name;
    this.reset = reset;
    this.saldo = saldo;
    this.showName = showName;
    this.value = value;
    this.withdraw = withdraw;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MyaccountFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MyaccountFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.myaccount_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MyaccountFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout ConstraintLayout = (LinearLayout) rootView;

      id = R.id.LinearNameApply;
      LinearLayout LinearNameApply = rootView.findViewById(id);
      if (LinearNameApply == null) {
        break missingId;
      }

      id = R.id.LinearSaldo;
      LinearLayout LinearSaldo = rootView.findViewById(id);
      if (LinearSaldo == null) {
        break missingId;
      }

      id = R.id.apply;
      Button apply = rootView.findViewById(id);
      if (apply == null) {
        break missingId;
      }

      id = R.id.deposit;
      Button deposit = rootView.findViewById(id);
      if (deposit == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = rootView.findViewById(id);
      if (name == null) {
        break missingId;
      }

      id = R.id.reset;
      Button reset = rootView.findViewById(id);
      if (reset == null) {
        break missingId;
      }

      id = R.id.saldo;
      TextView saldo = rootView.findViewById(id);
      if (saldo == null) {
        break missingId;
      }

      id = R.id.showName;
      TextView showName = rootView.findViewById(id);
      if (showName == null) {
        break missingId;
      }

      id = R.id.value;
      TextView value = rootView.findViewById(id);
      if (value == null) {
        break missingId;
      }

      id = R.id.withdraw;
      Button withdraw = rootView.findViewById(id);
      if (withdraw == null) {
        break missingId;
      }

      return new MyaccountFragmentBinding((LinearLayout) rootView, ConstraintLayout,
          LinearNameApply, LinearSaldo, apply, deposit, name, reset, saldo, showName, value,
          withdraw);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
